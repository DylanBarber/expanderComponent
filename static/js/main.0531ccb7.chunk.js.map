{"version":3,"sources":["svg/up-arrow.svg","svg/down-arrow.svg","components/Row.jsx","components/Expander.jsx","App.js","reportWebVitals.js","index.js"],"names":["ExpanderRow","props","name","children","onClickHandler","isExpanded","className","src","upArrowLogo","alt","onClick","downArrowLogo","ExpanderContainer","state","expandedRowIds","id","this","includes","newExpandedRowIds","filter","rowId","setState","rows","map","row","rowClickHandler","content","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,G,MAAA,IAA0B,sCCA1B,MAA0B,uCCwB1BA,EAnBK,SAAAC,GAAU,IAElBC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,SAAUC,EAA+BH,EAA/BG,eAAgBC,EAAeJ,EAAfI,WAExC,OACI,qCACI,sBAAKC,UAAU,YAAf,UAEQD,EAAa,qBAAKC,UAAU,QAAQC,IAAKC,EAAaC,IAAI,WAAWC,QAASN,IAC9E,qBAAKE,UAAU,QAAQC,IAAKI,EAAeF,IAAI,aAAaC,QAASN,IAEzE,oBAAIE,UAAU,UAAd,SAAyBJ,OAG5BG,EAAaF,EAAW,SCfhBS,G,wDACjB,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAEDY,MAAQ,CACTC,eAAgB,IAJL,E,4DAQHC,GAAK,IACTD,EAAmBE,KAAKH,MAAxBC,eAGR,GAFsBA,EAAeG,SAASF,GAE9C,CAEI,IAAMG,EAAoBJ,EAAeK,QAAO,SAAAC,GAAK,OAAIA,IAAUL,KAEnEC,KAAKK,SAAS,CAAEP,eAAgBI,SAMpCF,KAAKK,SAAS,CAAEP,eAAe,GAAD,mBAAMA,GAAN,CAAsBC,Q,+BAG9C,IAAD,OACGD,EAAmBE,KAAKH,MAAxBC,eAEFQ,EAAON,KAAKf,MAAMqB,KAAKC,KAAI,SAAAC,GAC7B,IAAMnB,EAAaS,EAAeG,SAASO,EAAIT,IAE/C,OACI,cAAC,EAAD,CAEIb,KAAMsB,EAAItB,KACVG,WAAYA,EACZD,eAAgB,kBAAM,EAAKqB,gBAAgBD,EAAIT,KAJnD,SAMKS,EAAIE,SALAF,EAAIT,OAUrB,OACI,qBAAKT,UAAU,eAAf,SACKgB,Q,GA9C8BK,cCuBhCC,MAxBf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,CAAmBgB,KAAM,CACvB,CACEP,GAAI,EACJb,KAAM,eACNwB,QAAS,SAEX,CACEX,GAAI,EACJb,KAAM,eACNwB,QAAS,SAEX,CACEX,GAAI,EACJb,KAAM,eACNwB,QAAS,eCRJG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0531ccb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/up-arrow.80d920fb.svg\";","export default __webpack_public_path__ + \"static/media/down-arrow.780d3280.svg\";","import './Row.css';\r\nimport upArrowLogo from '../svg/up-arrow.svg';\r\nimport downArrowLogo from '../svg/down-arrow.svg';\r\n\r\n\r\nconst ExpanderRow = props => {\r\n\r\n    const { name, children, onClickHandler, isExpanded } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rowHeader\">\r\n                {\r\n                    isExpanded ? <img className=\"arrow\" src={upArrowLogo} alt=\"up arrow\" onClick={onClickHandler} /> :\r\n                    <img className=\"arrow\" src={downArrowLogo} alt=\"down arrow\" onClick={onClickHandler} />\r\n                }\r\n                <h1 className=\"rowName\">{name}</h1>\r\n            </div>\r\n\r\n            {isExpanded ? children : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpanderRow;","import { Component } from \"react\";\r\nimport ExpanderRow from \"./Row\";\r\nimport \"./Expander.css\";\r\n\r\nexport default class ExpanderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expandedRowIds: []\r\n        };\r\n    }\r\n\r\n    rowClickHandler(id) {\r\n        const { expandedRowIds } = this.state;\r\n        const rowIsExpanded = expandedRowIds.includes(id);\r\n\r\n        if (rowIsExpanded) {\r\n            // Remove this row from expandedRowIds in state\r\n            const newExpandedRowIds = expandedRowIds.filter(rowId => rowId !== id);\r\n\r\n            this.setState({ expandedRowIds: newExpandedRowIds });\r\n\r\n            return;\r\n        }\r\n\r\n        // Add this row to expandedRowIds\r\n        this.setState({ expandedRowIds: [...expandedRowIds, id] });\r\n    }\r\n\r\n    render() {\r\n        const { expandedRowIds } = this.state;\r\n\r\n        const rows = this.props.rows.map(row => {\r\n            const isExpanded = expandedRowIds.includes(row.id);\r\n\r\n            return (\r\n                <ExpanderRow\r\n                    key={row.id}\r\n                    name={row.name}\r\n                    isExpanded={isExpanded}\r\n                    onClickHandler={() => this.rowClickHandler(row.id)}\r\n                >\r\n                    {row.content}\r\n                </ExpanderRow>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"rowContainer\">\r\n                {rows}\r\n            </div>\r\n        );\r\n    }\r\n}","import './App.css';\r\nimport ExpanderContainer from './components/Expander';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ExpanderContainer rows={[\r\n        {\r\n          id: 1,\r\n          name: 'TestRowName1',\r\n          content: 'test1'\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'TestRowName2',\r\n          content: 'test2'\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'TestRowName2',\r\n          content: 'test3'\r\n        }\r\n      ]} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}